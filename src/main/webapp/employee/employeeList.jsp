<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>

<jsp:include page="../includes/header.jsp">
  <jsp:param name="page" value="employees" />
</jsp:include>

        <link rel="stylesheet" href="${pageContext.request.contextPath}/css/employee.css">

<div class="content">
    <!-- Statistics -->
    <div class="stats">
        <div class="stat-card">
            <div class="stat-number">${stats.totalEmployees}</div>
            <div class="stat-label">T·ªïng nh√¢n vi√™n</div>
        </div>
        <div class="stat-card">
            <div class="stat-number">${stats.activeEmployees}</div>
            <div class="stat-label">ƒêang l√†m vi·ªác</div>
        </div>
        <div class="stat-card">
            <div class="stat-number">${stats.managerCount}</div>
            <div class="stat-label">Qu·∫£n l√Ω</div>
        </div>
    </div>

    <!-- Success/Error Messages -->
    <c:if test="${not empty success}">
        <div style="background: #d4edda; color: #155724; padding: 1rem; border-radius: 6px; margin-bottom: 1rem; border: 1px solid #c3e6cb;">
            ‚úÖ ${success}
        </div>
    </c:if>
    <c:if test="${not empty error}">
        <div style="background: #f8d7da; color: #721c24; padding: 1rem; border-radius: 6px; margin-bottom: 1rem; border: 1px solid #f5c6cb;">
            ‚ùå ${error}
        </div>
    </c:if>

    <!-- Main Content Layout -->
    <div class="main-layout">
        <!-- Left Sidebar - Employee Filters -->
        <div class="sidebar">
            <div class="filter-section">
                <h3 class="filter-title">T√¨m ki·∫øm</h3>
                <div class="search-box">
                    <input type="text" class="search-input" placeholder="Theo m√£, t√™n nh√¢n vi√™n" id="searchInput" onkeyup="searchEmployees()">
                </div>
            </div>

            <div class="filter-section">
                <h3 class="filter-title">V·ªã tr√≠</h3>
                <div class="filter-options">
                    <label class="filter-option">
                        <input type="checkbox" name="positionFilter" value="Qu·∫£n l√Ω" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        Qu·∫£n l√Ω
                    </label>
                    <label class="filter-option">
                        <input type="checkbox" name="positionFilter" value="Nh√¢n vi√™n" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        Nh√¢n vi√™n
                    </label>
                    <label class="filter-option">
                        <input type="checkbox" name="positionFilter" value="Thu ng√¢n" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        Thu ng√¢n
                    </label>
                    <label class="filter-option">
                        <input type="checkbox" name="positionFilter" value="ƒê·∫ßu b·∫øp" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        ƒê·∫ßu b·∫øp
                    </label>
                </div>
            </div>

            <div class="filter-section">
                <h3 class="filter-title">Tr·∫°ng th√°i</h3>
                <div class="filter-options">
                    <label class="filter-option">
                        <input type="checkbox" name="statusFilter" value="ƒêang l√†m" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        ƒêang l√†m vi·ªác
                    </label>
                    <label class="filter-option">
                        <input type="checkbox" name="statusFilter" value="ƒê√£ ngh·ªâ" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        Ngh·ªâ vi·ªác
                    </label>
                    <label class="filter-option">
                        <input type="checkbox" name="statusFilter" value="T·∫°m ngh·ªâ" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        Ngh·ªâ ph√©p
                    </label>
                </div>
            </div>

            <div class="filter-section">
                <h3 class="filter-title collapsible" onclick="toggleFilterSection(this)">
                    B·ªô ph·∫≠n
                    <span class="collapse-icon">‚ñº</span>
                </h3>
                <div class="filter-options collapsed">
                    <label class="filter-option">
                        <input type="checkbox" name="departmentFilter" value="KITCHEN" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        B·∫øp
                    </label>
                    <label class="filter-option">
                        <input type="checkbox" name="departmentFilter" value="FRONT_DESK" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        L·ªÖ t√¢n
                    </label>
                    <label class="filter-option">
                        <input type="checkbox" name="departmentFilter" value="SERVICE" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        Ph·ª•c v·ª•
                    </label>
                    <label class="filter-option">
                        <input type="checkbox" name="departmentFilter" value="MANAGEMENT" onchange="filterEmployees()">
                        <span class="checkmark"></span>
                        Qu·∫£n l√Ω
                    </label>
                </div>
            </div>
        </div>

        <!-- Right Content - Employee List -->
        <div class="main-content">
            <!-- Toolbar -->
            <div class="toolbar">
                <div>
                    <a href="#" class="btn btn-success" onclick="addEmployee()">‚ûï Th√™m nh√¢n vi√™n</a>
                    <button class="btn btn-primary" onclick="exportEmployees()">üìä Xu·∫•t file</button>
                    <button class="btn btn-primary" onclick="importEmployees()">üì• Import</button>
                </div>
            </div>

            <!-- Employee Table -->
            <div class="employee-table">
                <c:choose>
                    <c:when test="${empty employees}">
                        <div class="empty-state">
                            <h3>üë• Ch∆∞a c√≥ nh√¢n vi√™n n√†o</h3>
                            <p>H√£y th√™m nh√¢n vi√™n ƒë·∫ßu ti√™n ƒë·ªÉ b·∫Øt ƒë·∫ßu qu·∫£n l√Ω</p>
                            <a href="#" class="btn btn-success" onclick="addEmployee()" style="margin-top: 1rem;">‚ûï Th√™m nh√¢n vi√™n</a>
                        </div>
                    </c:when>
                    <c:otherwise>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th class="sortable" onclick="sortTable(0, 'string')">
                                        M√£ NV
                                        <span class="sort-icon"></span>
                                    </th>
                                    <th class="sortable" onclick="sortTable(1, 'string')">
                                        H·ªç t√™n
                                        <span class="sort-icon"></span>
                                    </th>
                                    <th class="sortable" onclick="sortTable(2, 'string')">
                                        CCCD/CMND
                                        <span class="sort-icon"></span>
                                    </th>
                                    <th class="sortable" onclick="sortTable(3, 'string')">
                                        S·ªë ƒëi·ªán tho·∫°i
                                        <span class="sort-icon"></span>
                                    </th>
                                    <th class="sortable" onclick="sortTable(4, 'string')">
                                        Tr·∫°ng th√°i
                                        <span class="sort-icon"></span>
                                    </th>
                                    <th>Thao t√°c</th>
                                </tr>
                            </thead>
                            <tbody>
                                <c:forEach var="emp" items="${employees}">
                                    <tr>
                                        <td>
                                            <span class="employee-code">${emp.employeeCode}</span>
                                        </td>
                                        <td>
                                            <div class="employee-info">
                                                <div class="employee-name">${emp.fullName}</div>
                                                <div class="employee-email">${emp.email}</div>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="national-id">${emp.nationalID}</span>
                                        </td>
                                        <td>
                                            <span class="phone">${emp.phone}</span>
                                        </td>
                                        <td>
                                            <span class="status status-${emp.employmentStatus.toLowerCase().replace(' ', '-')}">
                                                <c:choose>
                                                    <c:when test="${emp.employmentStatus == 'ƒêang l√†m'}">ƒêang l√†m vi·ªác</c:when>
                                                    <c:when test="${emp.employmentStatus == 'ƒê√£ ngh·ªâ'}">Ngh·ªâ vi·ªác</c:when>
                                                    <c:when test="${emp.employmentStatus == 'T·∫°m ngh·ªâ'}">Ngh·ªâ ph√©p</c:when>
                                                    <c:otherwise>${emp.employmentStatus}</c:otherwise>
                                                </c:choose>
                                            </span>
                                        </td>
                                        <td>
                                            <div class="action-buttons">
                                                <button class="btn btn-sm btn-primary" onclick="viewEmployee('${emp.employeeCode}')" title="Xem chi ti·∫øt">
                                                    <i class='bx bx-show'></i>
                                                </button>
                                                <button class="btn btn-sm btn-warning" onclick="editEmployee('${emp.employeeCode}')" title="Ch·ªânh s·ª≠a">
                                                    <i class='bx bx-edit'></i>
                                                </button>
                                                <c:choose>
                                                    <c:when test="${emp.employmentStatus == 'ƒêang l√†m'}">
                                                        <button class="btn btn-sm btn-danger" onclick="deactivateEmployee('${emp.employeeCode}')" title="V√¥ hi·ªáu h√≥a">
                                                            <i class='bx bx-user-x'></i>
                                                        </button>
                                                    </c:when>
                                                    <c:otherwise>
                                                        <button class="btn btn-sm btn-success" onclick="activateEmployee('${emp.employeeCode}')" title="K√≠ch ho·∫°t">
                                                            <i class='bx bx-user-check'></i>
                                                        </button>
                                                    </c:otherwise>
                                                </c:choose>
                                            </div>
                                        </td>
                                    </tr>
                                </c:forEach>
                            </tbody>
                        </table>
                    </c:otherwise>
                </c:choose>
            </div>
        </div>
    </div>
</div>

        <script>
            // Bi·∫øn ƒë·ªÉ theo d√µi tr·∫°ng th√°i s·∫Øp x·∫øp
            let currentSortColumn = -1;
            let currentSortDirection = 'asc';

            function searchEmployees() {
                const searchTerm = document.getElementById('searchInput').value.toLowerCase().trim();
                const rows = document.querySelectorAll('.table tbody tr');

                if (searchTerm === '') {
                    // N·∫øu kh√¥ng c√≥ t·ª´ kh√≥a t√¨m ki·∫øm, hi·ªÉn th·ªã t·∫•t c·∫£
                    rows.forEach(row => {
                        row.style.display = '';
                    });
                    return;
                }

                rows.forEach(row => {
                    const employeeCode = row.querySelector('.employee-code').textContent.toLowerCase();
                    const employeeName = row.querySelector('.employee-name').textContent.toLowerCase();
                    const employeeEmail = row.querySelector('.employee-email').textContent.toLowerCase();
                    const phone = row.querySelector('.phone').textContent.toLowerCase();
                    const nationalID = row.querySelector('.national-id').textContent.toLowerCase();

                    // T√¨m ki·∫øm trong m√£ nh√¢n vi√™n, t√™n, email, s·ªë ƒëi·ªán tho·∫°i v√† CCCD
                    if (employeeCode.includes(searchTerm) || 
                        employeeName.includes(searchTerm) || 
                        employeeEmail.includes(searchTerm) ||
                        phone.includes(searchTerm) ||
                        nationalID.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }

            function filterEmployees() {
                // √Åp d·ª•ng t·∫•t c·∫£ b·ªô l·ªçc
                applyAllFilters();
            }

            function applyAllFilters() {
                const searchTerm = document.getElementById('searchInput').value.toLowerCase().trim();
                const positionFilters = Array.from(document.querySelectorAll('input[name="positionFilter"]:checked')).map(cb => cb.value);
                const statusFilters = Array.from(document.querySelectorAll('input[name="statusFilter"]:checked')).map(cb => cb.value);
                const departmentFilters = Array.from(document.querySelectorAll('input[name="departmentFilter"]:checked')).map(cb => cb.value);
                const rows = document.querySelectorAll('.table tbody tr');

                rows.forEach((row, index) => {
                    let showRow = true;
                    
                    // √Åp d·ª•ng t√¨m ki·∫øm
                    if (searchTerm !== '') {
                        const employeeCode = row.querySelector('.employee-code').textContent.toLowerCase();
                        const employeeName = row.querySelector('.employee-name').textContent.toLowerCase();
                        const employeeEmail = row.querySelector('.employee-email').textContent.toLowerCase();
                        const phone = row.querySelector('.phone').textContent.toLowerCase();
                        const nationalID = row.querySelector('.national-id').textContent.toLowerCase();
                        
                        if (!employeeCode.includes(searchTerm) && 
                            !employeeName.includes(searchTerm) && 
                            !employeeEmail.includes(searchTerm) &&
                            !phone.includes(searchTerm) &&
                            !nationalID.includes(searchTerm)) {
                            showRow = false;
                        }
                    }
                    
                    // √Åp d·ª•ng l·ªçc theo tr·∫°ng th√°i
                    if (showRow && statusFilters.length > 0) {
                        const status = row.cells[4].querySelector('.status').textContent.trim();
                        const statusValue = getStatusValue(status);
                        if (!statusFilters.includes(statusValue)) {
                            showRow = false;
                        }
                    }

                    row.style.display = showRow ? '' : 'none';
                });
            }

            function getPositionValue(positionText) {
                switch(positionText) {
                    case 'Qu·∫£n l√Ω': return 'MANAGER';
                    case 'Nh√¢n vi√™n': return 'STAFF';
                    case 'Thu ng√¢n': return 'CASHIER';
                    case 'ƒê·∫ßu b·∫øp': return 'CHEF';
                    default: return positionText;
                }
            }

            function getStatusValue(statusText) {
                switch(statusText) {
                    case 'ƒêang l√†m vi·ªác': return 'ƒêang l√†m';
                    case 'Ngh·ªâ vi·ªác': return 'ƒê√£ ngh·ªâ';
                    case 'Ngh·ªâ ph√©p': return 'T·∫°m ngh·ªâ';
                    default: return statusText;
                }
            }

            function toggleFilterSection(element) {
                const options = element.nextElementSibling;
                const icon = element.querySelector('.collapse-icon');
                
                if (options.classList.contains('collapsed')) {
                    options.classList.remove('collapsed');
                    icon.textContent = '‚ñ≤';
                } else {
                    options.classList.add('collapsed');
                    icon.textContent = '‚ñº';
                }
            }

            function sortTable(columnIndex, dataType) {
                const table = document.querySelector('.table');
                const tbody = table.querySelector('tbody');
                const rows = Array.from(tbody.querySelectorAll('tr'));
                
                // X√≥a class sort c≈©
                document.querySelectorAll('.table th').forEach(th => {
                    th.classList.remove('sort-asc', 'sort-desc');
                });

                // X√°c ƒë·ªãnh h∆∞·ªõng s·∫Øp x·∫øp
                if (currentSortColumn === columnIndex) {
                    currentSortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';
                } else {
                    currentSortDirection = 'asc';
                }
                currentSortColumn = columnIndex;

                // Th√™m class sort cho header hi·ªán t·∫°i
                const currentHeader = document.querySelectorAll('.table th')[columnIndex];
                currentHeader.classList.add(currentSortDirection === 'asc' ? 'sort-asc' : 'sort-desc');

                // S·∫Øp x·∫øp c√°c h√†ng
                rows.sort((a, b) => {
                    let aValue, bValue;
                    
                    if (columnIndex === 0) { // M√£ NV
                        aValue = a.cells[0].querySelector('.employee-code').textContent.trim();
                        bValue = b.cells[0].querySelector('.employee-code').textContent.trim();
                    } else if (columnIndex === 1) { // H·ªç t√™n
                        aValue = a.cells[1].querySelector('.employee-name').textContent.trim();
                        bValue = b.cells[1].querySelector('.employee-name').textContent.trim();
                    } else if (columnIndex === 2) { // CCCD/CMND
                        aValue = a.cells[2].querySelector('.national-id').textContent.trim();
                        bValue = b.cells[2].querySelector('.national-id').textContent.trim();
                    } else if (columnIndex === 3) { // S·ªë ƒëi·ªán tho·∫°i
                        aValue = a.cells[3].querySelector('.phone').textContent.trim();
                        bValue = b.cells[3].querySelector('.phone').textContent.trim();
                    } else if (columnIndex === 4) { // Tr·∫°ng th√°i
                        aValue = a.cells[4].querySelector('.status').textContent.trim();
                        bValue = b.cells[4].querySelector('.status').textContent.trim();
                    }

                    // So s√°nh d·ª±a tr√™n ki·ªÉu d·ªØ li·ªáu
                    let comparison = 0;
                    if (dataType === 'number') {
                        comparison = aValue - bValue;
                    } else {
                        comparison = aValue.localeCompare(bValue, 'vi', { numeric: true });
                    }

                    return currentSortDirection === 'asc' ? comparison : -comparison;
                });

                // C·∫≠p nh·∫≠t DOM
                rows.forEach(row => tbody.appendChild(row));
            }

            function addEmployee() {
                alert('Ch·ª©c nƒÉng th√™m nh√¢n vi√™n s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai');
            }

            function viewEmployee(employeeCode) {
                alert('Ch·ª©c nƒÉng xem chi ti·∫øt nh√¢n vi√™n s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai cho m√£: ' + employeeCode);
            }

            function editEmployee(employeeCode) {
                alert('Ch·ª©c nƒÉng ch·ªânh s·ª≠a nh√¢n vi√™n s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai cho m√£: ' + employeeCode);
            }

            function activateEmployee(employeeCode) {
                if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën k√≠ch ho·∫°t nh√¢n vi√™n n√†y?')) {
                    alert('Ch·ª©c nƒÉng k√≠ch ho·∫°t nh√¢n vi√™n s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai cho m√£: ' + employeeCode);
                }
            }

            function deactivateEmployee(employeeCode) {
                if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën v√¥ hi·ªáu h√≥a nh√¢n vi√™n n√†y?')) {
                    alert('Ch·ª©c nƒÉng v√¥ hi·ªáu h√≥a nh√¢n vi√™n s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai cho m√£: ' + employeeCode);
                }
            }

            function exportEmployees() {
                alert('Ch·ª©c nƒÉng xu·∫•t file s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai');
            }

            function importEmployees() {
                alert('Ch·ª©c nƒÉng import s·∫Ω ƒë∆∞·ª£c tri·ªÉn khai');
            }

            // Auto search khi g√µ
            document.getElementById('searchInput').addEventListener('input', searchEmployees);
            
            // Th√™m event listener cho c√°c checkbox filter
            document.querySelectorAll('input[name="positionFilter"], input[name="statusFilter"]').forEach(checkbox => {
                checkbox.addEventListener('change', applyAllFilters);
            });
        </script>

<jsp:include page="../includes/footer.jsp" />
